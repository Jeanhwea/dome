#!/usr/bin/env bash
DOME_BASE=`cd $(dirname $0); cd ..; pwd`
DOME_COLOR=${DOME_COLOR:="no"}
DOME_COMMAND=$1
. $DOME_BASE/common/common.sh


dome_main() {
    DOME_ARGS="$*"
    DOME_COMMAND=${DOME_COMMAND:-"help"}
    case "$DOME_COMMAND" in
        ma )
            $DOME_BASE/script/git-upgrade-semantic-version.sh 3 ;;
        mr )
            $DOME_BASE/script/git-upgrade-semantic-version.sh 2 ;;
        mm )
            $DOME_BASE/script/git-upgrade-semantic-version.sh 1 ;;
        cl )
            $DOME_BASE/script/git-clone-repository-to-local.sh "$DOME_ARGS" ;;
        nb )
            $DOME_BASE/script/git-new-branch.sh "$DOME_ARGS" ;;
        cm )
            $DOME_BASE/script/git-auto-add-and-commit-changes.sh "$DOME_ARGS" ;;
        rm )
            $DOME_BASE/script/git-cleanup-my-branch.sh "$DOME_ARGS" ;;
        gf )
            $DOME_BASE/script/golang-format-source-here.sh "$DOME_ARGS" ;;
        ls )
            $DOME_BASE/script/dome-list-sub-commands.sh "$DOME_ARGS" ;;
        rc|record )
            $DOME_BASE/script/bot-record-mouse-clicks.sh "$DOME_ARGS" ;;
        sd|send )
            $DOME_BASE/script/bot-send-feishu-message.sh "$DOME_ARGS" ;;
        create )
            $DOME_BASE/script/dome-create-sub-command-script.sh "$DOME_ARGS" ;;
        date )
            $DOME_BASE/script/dwim-to-date-string.sh "$DOME_ARGS" ;;
        img )
            $DOME_BASE/script/save-image-from-clipboard.sh "$DOME_ARGS" ;;
        uniq )
            $DOME_BASE/script/tool-uniq-text-lines.sh "$DOME_ARGS" ;;
        * )
            dome_default_run "$DOME_ARGS" ;;
    esac
}

dome_default_run() {
    DOME_ARGS="$*"
    local script="$DOME_BASE/script/$DOME_COMMAND.sh"
    if [ -f "$script" ]; then
        $script $DOME_ARGS
    else
        logw "fail to find $script, Dome $DOME_VERSION"
    fi
}

shift
dome_main "$*"

# logi Done

# Local Variables:
# mode: sh
# End:
